name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node: [16]
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          cache-dependency-path: yarn.lock
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: yarn --immutable

      - name: Build
        run: yarn build

  lint:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node: [16]
        os: [ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          cache-dependency-path: yarn.lock
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: yarn --immutable

      - name: Lint
        run: yarn lint
  
  release-build:
    if: |
      github.event_name == 'push' &&
      !contains(github.event.head_commit.message, 'chore') &&
      !contains(github.event.head_commit.message, 'docs')

    needs:
      - lint
      - build

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v2
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          cache-dependency-path: yarn.lock
          node-version: ${{ matrix.node }}
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies 👨🏻‍💻
        run: yarn --immutable

      - name: Publish Package
        run: yarn release
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
  publish-docs:
    if: |
      github.event_name == 'push' &&
      contains(github.event.head_commit.message, 'docs')

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]
    
    defaults:
      run:
        working-directory: docs

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          cache-dependency-path: yarn.lock
          node-version: ${{ matrix.node }}

      - name: Install dependencies 👨🏻‍💻
        run: yarn --immutable

      - name: Cache Nuxt Build
        uses: actions/cache@v3.0.2
        id: nuxt-cache
        with:
          path: ./node_modules/.cache
          key: ${{ runner.os }}-nuxt-${{ hashFiles('**/lockfiles') }}
          restore-keys: |
            ${{ runner.os }}-nuxt-

      - name: Generate Docs
        run: yarn generate

      - name: Deploy To Firebase
        run: |
          curl -sL firebase.tools | bash > /dev/null
          firebase use --add "$PROJECT_ID" > /dev/null
          firebase deploy --only hosting --message "$COMMIT_MESSAGE"
        env:
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}